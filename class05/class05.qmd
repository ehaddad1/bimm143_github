---
title: "Class 5 Data Visualization with ggplot2"
author: "Eli Haddad (PID: A16308227)"
format: pdf
---

## Using GGPLOT

The ggplot2 package needs to be installed as it does not come with R "out of the box"

We have to use the `install.packages()` function to install ggplot2

```{r}
head(cars)
```

To use ggplot I need to load it up before I can call any of the functions in the package. I do this with the `library()` function.

```{r}
#install.packages("ggplot2")
library(ggplot2)
ggplot()
```

All ggplot figures have at least 3 things:
- data (the stuff we want to plot)
- aesthetics mapping (aes vales)
- geoms

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point()

```

ggplot is not the only graphing system in R there are lots of others. There is even "base R" graphics.

```{r}
plot(cars)

```

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) + 
  labs(title = "Speed versus Stopping Distance of Cars",
       x ="Speed (miles per hour)",
       y ="Distance to Stop (ft)",
       subtitle = "Measuring how car speed impacts the amount of distance it takes to stop",
       caption = "The relationship between car speed and the distance it takes to stop is a positive correlation. The faster the car, the greater distance it needs to stop.") +
  theme_bw()

```
```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)

```

Number of genes in the dataset:
```{r}
nrow(genes)
```

The column names and number of columns in the dataset, respectively:
```{r}
colnames(genes)
ncol(genes)
```
Tabulated "State" of genes
```{r}
table(genes$State)
```
Fraction of genes up-regulated in this dataset
```{r}
round(table(genes$State)/nrow(genes) * 100, 2)
```

```{r}
ggplot(genes) + 
  aes(x=Condition1, y=Condition2) + 
  geom_point()
```
```{r}
p <- ggplot(genes) + 
    aes(x=Condition1, y=Condition2, col=State) +
    geom_point()
p + scale_colour_manual( values=c("blue","gray","red") ) +
  labs(title="Gene Expression Changes Upon Drug Treatment",
       x="Control (no drug)",
       y="Drug Treatment")


```

Section 7
```{r}
#install.packages("gapminder")
#install.packages("dplyr")
library(gapminder)
library(dplyr)

gapminder_2007 <- gapminder %>% filter(year==2007)

ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color=continent, size = pop) +
  geom_point(alpha=0.5)

```
```{r}
ggplot(gapminder_2007) + 
  aes(x = gdpPercap, y = lifeExp, size = pop) +
  geom_point(alpha=0.5) +
  scale_size_area(max_size=10)

```
```{r}
gapminder_1957 <- gapminder %>% filter(year==1957)
ggplot(gapminder_1957) +
  aes(x=gdpPercap, y=lifeExp, color = continent, size =pop) + 
  geom_point(alpha=0.7) +
  scale_size_area(max_size = 15)
```

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957 | year == 2007)
ggplot(gapminder_1957) +
  aes(x=gdpPercap, y=lifeExp, color = continent, size =pop) + 
  geom_point(alpha=0.7) +
  scale_size_area(max_size = 15) + 
  facet_wrap(~year)
```
Section 8

```{r}
gapminder_top5 <- gapminder %>% 
  filter(year==2007) %>% 
  arrange(desc(pop)) %>% 
  top_n(5, pop)

gapminder_top5
```

Country by Population
```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop))

```
Country by Life Expectancy
```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = lifeExp))
```

Country by Population with color
```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop, fill = continent))
```

Country by Population but with color based on life expectancy
```{r}
ggplot(gapminder_top5) + 
  geom_col(aes(x = country, y = pop, fill=lifeExp))
```

```{r}
ggplot(gapminder_top5) +
  aes(x=reorder(country, -pop), y=pop, fill=country) +
  geom_col(col="gray30") +
  guides(fill="none")
```

Flipping Bar Charts

```{r}
head(USArrests)

USArrests$State <- rownames(USArrests)
ggplot(USArrests) +
  aes(x=reorder(State,Murder), y=Murder) +
  geom_point() +
  geom_segment(aes(x=State, 
                   xend=State, 
                   y=0, 
                   yend=Murder), color="blue") +
  coord_flip()
```

Animation

```{r}
#install.packages("gapminder")
#install.packages("gganimate")
# library(gapminder)
# library(gganimate)
# 
# 
# ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
#   geom_point(alpha = 0.7, show.legend = FALSE) +
#   scale_colour_manual(values = country_colors) +
#   scale_size(range = c(2, 12)) +
#   scale_x_log10() +
#   facet_wrap(~continent) +
#   labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
#   transition_time(year) +
#   shadow_wake(wake_length = 0.1, alpha = FALSE)
```

Combining Plots

```{r}
#install.packages("patchwork")
library(patchwork)

p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p3 <- ggplot(mtcars) + geom_smooth(aes(disp, qsec))
p4 <- ggplot(mtcars) + geom_bar(aes(carb))
(p1 | p2 | p3) /
      p4
```